set number relativenumber
set ideajoin
set linenumber
set showmode
set showcmd
set incsearch
set hlsearch
set scrolloff=10
set visualbell
set ignorecase
set smartcase
set notimeout
set clipboard+=unnamed

" 3rd party
set which-key
set surround
set highlightedyank

" Which Key
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

" NerdTree
Plug 'preservim/nerdtree'
nnoremap <C-n> :NERDTree<CR>

let g:NERDTreeWinSize=30
let g:NERDTreeMapPreview=0
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

let mapleader=' '

noremap <leader>lr :action ExtractMethod<CR>

" Manage Projects
noremap <C-Space>s :action ManageRecentProjects<CR>

" Tab Navigation
noremap <Tab> :action NextTab<CR>
noremap <S-Tab> :action PreviousTab<CR>

" Pane Navigation
noremap <C-h> <C-w>h
noremap <C-l> <C-w>l
noremap <C-k> <C-w>k
noremap <C-j> <C-w>j

" File Navigation
map <leader>ff <action>(GoToFile)
map <leader><leader> <action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)

" Center Screen with Page up and down
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" Window Management
map <leader>% <action>(SplitVertically)
map <leader>" <action>(SplitHorizontally)
map <leader>x <action>(CloseContent)
map <leader>wm <action>(MoveEditorToOppositeTabGroup)

" Popup Navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)

" Debug options
map <leader>dd <action>(Debug)
map <leader>db <action>(ToggleLineBreakpoint)

" Actions
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

" Refactoring
map <leader>rn <action>(RenameElement)
map <leader>re <action>(ExtractMethod)
map <leader>rv <action>(IntroduceVariable)
map <leader>rf <action>(IntroduceField)
map <leader>rs <action>(ChangeSignature)
map <leader>rr <action>(Refactorings.QuickListPopupAction)

" Go To Code
map <leader>gd <action>(GoToDeclaration)
map <leader>gy <action>(GotoTypeDeclaraton)
map <leader>gi <action>(GotoImplementation)
map <leader>gu <action>(ShowUsages)
map <leader>gt <action>(GotoTest)
map <leader>gf <action>(Back)
map <leader>gb <action>(Forward)

" Go Tag
map <leader>gt :action IntentionActionAsAction_com.goide.inspections.tag.GoTagAddKeyIntention<CR>

" Errors
map <leader>en <action>(ReSharperGotoNextErrorInSolution)
map <leader>ep <action>(ReSharperGotoPrevErrorInSolution)

" Menu
map <leader>mm <action>(MainMenu)
map <leader>ma <action>(AnalyzeMenu)
map <leader>mb <action>(BuildMenu)
map <leader>mc <action>(CodeMenu)
map <leader>mf <action>(FindMenuGroup)
map <leader>mg <action>(GoToMenu)
map <leader>ms <action>(ScopeViewPopupMenu)
map <leader>mt <action>(EditorTabPopupMenu)
map <leader>mw <action>(ToolWindowsGroup)
